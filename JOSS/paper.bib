@article{bezanson2017julia,
  title={Julia: A fresh approach to numerical computing},
  author={Bezanson, Jeff and Edelman, Alan and Karpinski, Stefan and Shah, Viral B},
  journal={SIAM review},
  volume={59},
  number={1},
  pages={65--98},
  year={2017},
  publisher={SIAM},
  url={https://doi.org/10.1137/141000671}
}

@misc{RFC4180,
    title={Common Format and MIME Type for Comma-Separated Values (CSV) Files},
    author={Yakov Shafranovich},
	series={Request for Comments},
	number=4180,
	pagetotal=8,
	year=2005,
	month=oct,
    howpublished={RFC 4180},
	publisher={RFC Editor},
	doi={10.17487/RFC4180},
    url={https://rfc-editor.org/rfc/rfc4180.txt},
	abstract={This RFC documents the format used for Comma-Separated Values (CSV) files and registers the associated MIME type "text/csv". This memo provides information for the Internet community.},
}

@misc{RFC8259,
    title={The JavaScript Object Notation (JSON) Data Interchange Format},
    author={Tim Bray},
	series={Request for Comments},
	number=8259,
	pagetotal=16,
	year=2017,
	month=dec,
    howpublished={RFC 8259},
	publisher={RFC Editor},
	doi={10.17487/RFC8259},
	url={https://rfc-editor.org/rfc/rfc8259.txt},
	abstract={JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data. This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.},
}

@misc{bson (binary json): specification,
    url={http://bsonspec.org/spec.html},
    journal={BSON (Binary JSON): Specification}
}

@misc{hdf5,
    title={HDF5 File Format Specification Version 3.0},
    url={https://portal.hdfgroup.org/display/HDF5/File Format Specification},
    journal={Confluence}
}

@misc{JLD,
	author = {Timothy Holy and Simon Kornblith and other contributors},
	title = {JLD.jl - Saving and loading julia variables while preserving native types (MIT License)},
	howpublished = {\url{https://github.com/JuliaIO/JLD.jl/}},
	year=2012
}

@misc{pickle - python object serialization - python 3.8.5 documentation,
    title={pickle - Python object serializationÂ¶},
    url={https://docs.python.org/3/library/pickle.html},
    journal={pickle - Python object serialization - Python 3.8.5 documentation}
}

@misc{mat,
    title={matfile},
    url={https://www.mathworks.com/help/matlab/import_export/mat-file-versions.html},
    journal={MAT}
}

@misc{blaom2020mlj,
    title={MLJ: A Julia package for composable Machine Learning},
    author={Anthony D. Blaom and Franz Kiraly and Thibaut Lienart and Yiannis Simillides and Diego Arenas and Sebastian J. Vollmer},
    year={2020},
    eprint={2007.12285},
    archivePrefix={arXiv},
    primaryClass={cs.LG}
}
